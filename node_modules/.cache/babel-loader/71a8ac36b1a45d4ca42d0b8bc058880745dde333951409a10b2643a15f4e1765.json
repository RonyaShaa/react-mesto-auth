{"ast":null,"code":"var _jsxFileName = \"/home/veronika/dev/react-mesto-auth/src/components/Login.jsx\";\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\n// •  <Login /> - компонент для авторизации пользователя.\n//  Из себя представляет форму где пользователь \n//  вводит данные (почту и пароль) \n//  и передает их в функцию отправки на сервер.\n//   Сама функция должна быть описана выше, на уровне app.js .\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  // const [formValue, setFormValue] = useState({\n  //   username: '',\n  //   password: ''\n  // })\n  // const navigate = useNavigate();\n\n  // const handleChange = (e) => {\n  //   const {name, value} = e.target;\n\n  //   setFormValue({\n  //     ...formValue,\n  //     [name]: value\n  //   });\n  // }\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (!formValue.username || !formValue.password){\n  //     return;\n  //   }\n  //   auth.authorize(formValue.username, formValue.password)\n  //     .then((data) => {\n  //       if (data.jwt){\n  //         setFormValue({username: '', password: ''});\n  //         handleLogin();\n  //         navigate('/diary', {replace: true});\n  //       }\n  //     })\n  //     .catch(err => console.log(err));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login__text\",\n      children: \"\\u0412\\u0445\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      /*onSubmit={handleSubmit}*/className: \"login__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input-email\",\n        className: \"login__input login__input_type_email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        name: \"email\"\n        //value={}\n        //onChange={handleChange}\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input-password\",\n        className: \"login__input login__input_type_password\",\n        type: \"password\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        name: \"password\"\n        //value={}\n        //onChange={handleChange}\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login__button\",\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Link","useNavigate","jsxDEV","_jsxDEV","Login","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","name","required","_c","$RefreshReg$"],"sources":["/home/veronika/dev/react-mesto-auth/src/components/Login.jsx"],"sourcesContent":["import React from 'react';\nimport {Link, useNavigate} from 'react-router-dom';\n\n\n// •  <Login /> - компонент для авторизации пользователя.\n//  Из себя представляет форму где пользователь \n//  вводит данные (почту и пароль) \n//  и передает их в функцию отправки на сервер.\n//   Сама функция должна быть описана выше, на уровне app.js .\n\n\nconst Login = () => {\n  // const [formValue, setFormValue] = useState({\n  //   username: '',\n  //   password: ''\n  // })\n  // const navigate = useNavigate();\n\n  // const handleChange = (e) => {\n  //   const {name, value} = e.target;\n\n  //   setFormValue({\n  //     ...formValue,\n  //     [name]: value\n  //   });\n  // }\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (!formValue.username || !formValue.password){\n  //     return;\n  //   }\n  //   auth.authorize(formValue.username, formValue.password)\n  //     .then((data) => {\n  //       if (data.jwt){\n  //         setFormValue({username: '', password: ''});\n  //         handleLogin();\n  //         navigate('/diary', {replace: true});\n  //       }\n  //     })\n  //     .catch(err => console.log(err));\n  // }\n\n  return (\n      <section className='login'>\n        <p className=\"login__text\">\n          Вход\n        </p>\n        <form /*onSubmit={handleSubmit}*/ className=\"login__form\">\n          <input\n            id='input-email'\n            className='login__input login__input_type_email'\n            type='email'\n            placeholder='Email'\n            name='email'\n            //value={}\n            //onChange={handleChange}\n            required\n          />\n          <input\n            id='input-password'\n            className='login__input login__input_type_password'\n            type='password'\n            placeholder='Пароль'\n            name='password'\n            //value={}\n            //onChange={handleChange}\n            required\n          />\n          <button className=\"login__button\" type=\"submit\">Войти</button>\n        </form>\n      </section>\n  )\n}\n\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,EAAEC,WAAW,QAAO,kBAAkB;;AAGlD;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACID,OAAA;IAASE,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACxBH,OAAA;MAAGE,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAE3B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACJP,OAAA;MAAM,2BAA4BE,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACvDH,OAAA;QACEQ,EAAE,EAAC,aAAa;QAChBN,SAAS,EAAC,sCAAsC;QAChDO,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,IAAI,EAAC;QACL;QACA;QAAA;QACAC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACR,eACFP,OAAA;QACEQ,EAAE,EAAC,gBAAgB;QACnBN,SAAS,EAAC,yCAAyC;QACnDO,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,sCAAQ;QACpBC,IAAI,EAAC;QACL;QACA;QAAA;QACAC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACR,eACFP,OAAA;QAAQE,SAAS,EAAC,eAAe;QAACO,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEhB,CAAC;AAAAM,EAAA,GA7DKZ,KAAK;AA+DX,eAAeA,KAAK;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}