{"ast":null,"code":"var _jsxFileName = \"/home/veronika/dev/react-mesto-auth/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Route, Routes, Navigate, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/Api.js';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport { ProtectedRoute } from './ProtectedRoute';\nimport * as auth from '../utils/auth';\nimport fail from '../images/крестик.svg';\nimport success from '../images/галочка.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // добавим в стейт переменные состояния попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n  const [infoTooltipTitle, setInfoTooltipTitle] = React.useState('');\n  const [toolTipImage, setTooltipImage] = React.useState('');\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [userEmail, setUserEmail] = React.useState('');\n\n  //добавим в стейт переменную состояния текущего пользователя\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  //состояние залогинен ли пользователь\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(_ref => {\n      let [userData, cardData] = _ref;\n      //получаем объект с данными пользователя(name, about, avatar)\n      //получим массив карточек с сервера\n      setCurrentUser(userData);\n      setCards(cardData);\n      tokenCheck();\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль \n    });\n  }, []); //при перерендере будет проверяться массив зависимостей\n\n  React.useEffect(() => {\n    to;\n  });\n  function handleLogin(email, password) {\n    auth.login(email, password).then(res => {\n      // сохраняем jwt\n      localStorage.setItem('jwt', res.token);\n      setLoggedIn(true);\n      setUserEmail(email);\n      // вызовем navigate и передадим путь\n      navigate('/', {\n        replace: true\n      });\n    }).catch(err => console.log(err));\n  }\n  function handleRegister(email, password) {\n    auth.register(email, password).then(() => {\n      // вызовем navigate и передадим путь\n      setIsInfoTooltipPopupOpen(true);\n      setInfoTooltipTitle('Вы успешно зарегистрировались!');\n      setTooltipImage(success);\n      navigate('/signin');\n    }).catch(err => {\n      console.log(err);\n      setIsInfoTooltipPopupOpen(true);\n      setInfoTooltipTitle('Что-то пошло не так! Попробуйте еще раз.');\n      setTooltipImage(fail);\n    });\n  }\n\n  //сохраним авторизованного пользователя\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      auth.checkToken(jwt).then(() => {\n        setLoggedIn(true);\n        // вызовем navigate и передадим путь\n        navigate('/', {\n          replace: true\n        });\n      }).catch(err => console.log(err));\n    }\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n    setIsImagePopupOpen(false);\n    setIsInfoTooltipPopupOpen(false);\n  }\n  function handleCardClick(card) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(cards => cards.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль \n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(newCard => {\n      setCards(cards => cards.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль \n    });\n  }\n\n  function handleUpdateUser(userData) {\n    api.setUserInfo(userData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль \n    });\n  }\n\n  function handleUpdateAvatar(userData) {\n    api.editAvatar(userData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль \n    });\n  }\n\n  function handleAddPlaceSubmit(cardData) {\n    api.addNewCard(cardData).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль \n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page__container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          email: userEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              element: Main,\n              onEditAvatarClick: handleEditAvatarClick,\n              onEditProfileClick: handleEditProfileClick,\n              onAddPlaceClick: handleAddPlaceClick,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDelete,\n              cards: cards,\n              loggedIn: loggedIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/signin\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"signup\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"signin\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n          isOpen: isInfoTooltipPopupOpen,\n          onClose: closeAllPopups,\n          title: infoTooltipTitle,\n          image: toolTipImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups,\n          isOpen: isImagePopupOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          name: \"delete-card\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"popup__button-yes\",\n            type: \"submit\",\n            children: \"\\u0414\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aHf9CtgjcP3ivPEHgWRBaB9s1W4=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Route","Routes","Navigate","useNavigate","Header","Main","Footer","PopupWithForm","ImagePopup","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","InfoTooltip","ProtectedRoute","auth","fail","success","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","infoTooltipTitle","setInfoTooltipTitle","toolTipImage","setTooltipImage","selectedCard","setSelectedCard","userEmail","setUserEmail","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","navigate","useEffect","Promise","all","getUserInfo","getInitialCards","then","_ref","userData","cardData","tokenCheck","catch","err","console","log","to","handleLogin","email","password","login","res","localStorage","setItem","token","replace","handleRegister","register","jwt","getItem","checkToken","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardClick","card","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","setUserInfo","handleUpdateAvatar","editAvatar","handleAddPlaceSubmit","addNewCard","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEditAvatarClick","onEditProfileClick","onAddPlaceClick","onCardClick","onCardLike","onCardDelete","onRegister","onLogin","isOpen","onClose","title","image","onUpdateUser","name","type","onUpdateAvatar","onAddPlace","_c","$RefreshReg$"],"sources":["/home/veronika/dev/react-mesto-auth/src/components/App.jsx"],"sourcesContent":["import React from 'react';\nimport { Route, Routes, Navigate, useNavigate} from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/Api.js';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport {ProtectedRoute} from './ProtectedRoute'\nimport * as auth from '../utils/auth';\nimport fail from '../images/крестик.svg'\nimport success from '../images/галочка.svg'\n\n\nfunction App() {\n  // добавим в стейт переменные состояния попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n  \n  const [infoTooltipTitle, setInfoTooltipTitle] = React.useState('');\n  const [toolTipImage, setTooltipImage] = React.useState('');\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const [userEmail, setUserEmail] = React.useState('')\n  \n  //добавим в стейт переменную состояния текущего пользователя\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  //состояние залогинен ли пользователь\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userData, cardData]) => {\n        //получаем объект с данными пользователя(name, about, avatar)\n        //получим массив карточек с сервера\n        setCurrentUser(userData)\n        setCards(cardData);\n        tokenCheck();\n      }).catch((err) => {\n        console.log(err); // выведем ошибку в консоль \n      });\n  }, []);//при перерендере будет проверяться массив зависимостей\n\n  React.useEffect(() => {\n    to\n  })\n  function handleLogin(email,password){\n    auth.login(email, password)\n    .then((res) => {\n        // сохраняем jwt\n        localStorage.setItem('jwt',res.token);\n        setLoggedIn(true);\n        setUserEmail(email);\n        // вызовем navigate и передадим путь\n        navigate('/', {replace: true});\n    })\n    .catch(err => console.log(err));\n  }\n\n  function handleRegister(email,password){\n    auth.register(email, password)\n    .then(() => {\n    // вызовем navigate и передадим путь\n      setIsInfoTooltipPopupOpen(true);\n      setInfoTooltipTitle('Вы успешно зарегистрировались!');\n      setTooltipImage(success);\n      navigate('/signin');\n    })\n    .catch((err) => {\n      console.log(err);\n      setIsInfoTooltipPopupOpen(true);\n      setInfoTooltipTitle('Что-то пошло не так! Попробуйте еще раз.');\n      setTooltipImage(fail);\n    })\n  }\n\n  //сохраним авторизованного пользователя\n  function tokenCheck(){\n    const jwt = localStorage.getItem('jwt');\n    if(jwt){\n      auth.checkToken(jwt)\n      .then(() => {\n        setLoggedIn(true);\n        // вызовем navigate и передадим путь\n        navigate('/', {replace: true});\n      })\n      .catch(err => console.log(err));\n    }\n  }\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n    setIsImagePopupOpen(false);\n    setIsInfoTooltipPopupOpen(false);\n  }\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id,!isLiked)\n      .then((newCard) => {\n        setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c))\n      }).catch((err) => {\n        console.log(err); // выведем ошибку в консоль \n      });\n  }\n\n  function handleCardDelete(card){\n    api.deleteCard(card._id)\n      .then((newCard) => {\n        setCards(cards => cards.filter((c) => c._id !== card._id))\n      }).catch((err) => {\n        console.log(err); // выведем ошибку в консоль \n      });\n  }\n\n  function handleUpdateUser(userData){\n    api.setUserInfo(userData)\n      .then((res)=>{\n        setCurrentUser(res);\n        closeAllPopups();\n      }).catch((err) => {\n        console.log(err); // выведем ошибку в консоль \n      });\n  }\n\n  function handleUpdateAvatar(userData){\n    api.editAvatar(userData)\n      .then((res) =>{\n        setCurrentUser(res);\n        closeAllPopups();\n      }).catch((err) => {\n        console.log(err); // выведем ошибку в консоль \n      });\n  }\n\n  function handleAddPlaceSubmit(cardData){\n    api.addNewCard(cardData)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      }).catch((err) => {\n        console.log(err); // выведем ошибку в консоль \n      });\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header email={userEmail}/>\n          <Routes>\n            <Route path='/' \n              element={\n                <ProtectedRoute \n                  element={Main} \n                  onEditAvatarClick={handleEditAvatarClick}\n                  onEditProfileClick={handleEditProfileClick}      \n                  onAddPlaceClick={handleAddPlaceClick}  \n                  onCardClick={handleCardClick}   \n                  onCardLike={handleCardLike}  \n                  onCardDelete={handleCardDelete}  \n                  cards={cards}\n                  loggedIn={loggedIn}\n                />\n              } \n            />\n            <Route path='/' element={loggedIn ? <Navigate to='/' /> : <Navigate to='/signin' replace />} /> \n            <Route path='signup' element={<Register onRegister={handleRegister}/>} />\n            <Route path='signin' element={<Login onLogin={handleLogin} />} />\n          </Routes>  \n          <Footer />\n          {/* попап Регистрации */}\n          <InfoTooltip \n            isOpen={isInfoTooltipPopupOpen} \n            onClose={closeAllPopups} \n            title={infoTooltipTitle}\n            image={toolTipImage}\n          />\n          {/* попап Редактировать профиль */}\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n          {/* попап Развернуть карточку */}\n          <ImagePopup\n            card={selectedCard}\n            onClose={closeAllPopups}\n            isOpen={isImagePopupOpen}\n          />\n          {/* попап Удалить карточку */}\n          <PopupWithForm\n            title='Вы уверены?'\n            name='delete-card'\n          >\n            <button className=\"popup__button-yes\" type=\"submit\">Да</button>\n          </PopupWithForm>\n          {/* попап Обновить фото профиля */}\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n          {/* попап Добавить карточку */}\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}