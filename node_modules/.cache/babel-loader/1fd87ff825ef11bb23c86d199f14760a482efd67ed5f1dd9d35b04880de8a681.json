{"ast":null,"code":"var _jsxFileName = \"/home/veronika/dev/mesto-react/src/components/EditAvatarPopup.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditAvatarPopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onUpdateAvatar\n  } = _ref;\n  const inputElement = React.useRef();\n  // Подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n  const [values, setValues] = React.useState({});\n  React.useEffect(() => {\n    inputElement.current.value = '';\n  }, [isOpen]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: inputElement.current.value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    name: \"update-avatar\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputElement,\n      id: \"input-update-avatar\",\n      type: \"url\",\n      className: \"popup__input-text popup__input-text_type_update-avatar\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      name: \"link\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"input-update-avatar-error\",\n      className: \"popup__error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAvatarPopup, \"OVY00yGjSIOFAMB88pKHZ8O08/s=\");\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\nvar _c;\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["React","PopupWithForm","jsxDEV","_jsxDEV","EditAvatarPopup","_ref","_s","isOpen","onClose","onUpdateAvatar","inputElement","useRef","currentUser","useContext","CurrentUserContext","values","setValues","useState","useEffect","current","value","handleSubmit","e","preventDefault","avatar","title","name","buttonText","onSubmit","children","ref","id","type","className","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/veronika/dev/mesto-react/src/components/EditAvatarPopup.jsx"],"sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  \n  const inputElement = React.useRef();\n    // Подписка на контекст\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const [values, setValues] = React.useState({});\n  React.useEffect(() => {\n    inputElement.current.value = '';\n  }, [isOpen])\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onUpdateAvatar({\n      avatar: inputElement.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      title='Обновить аватар'\n      name='update-avatar'\n      buttonText='Сохранить'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        ref={inputElement}\n        id=\"input-update-avatar\"\n        type=\"url\"\n        className=\"popup__input-text popup__input-text_type_update-avatar\"\n        placeholder=\"Ссылка на картинку\"\n        name=\"link\"\n        required\n      />\n      <span id=\"input-update-avatar-error\" className=\"popup__error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,eAAeA,CAAAC,IAAA,EAAsC;EAAAC,EAAA;EAAA,IAArC;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAAJ,IAAA;EAE1D,MAAMK,YAAY,GAAGV,KAAK,CAACW,MAAM,EAAE;EACjC;EACA,MAAMC,WAAW,GAAGZ,KAAK,CAACa,UAAU,CAACC,kBAAkB,CAAC;EAExD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChDjB,KAAK,CAACkB,SAAS,CAAC,MAAM;IACpBR,YAAY,CAACS,OAAO,CAACC,KAAK,GAAG,EAAE;EACjC,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAEZ,SAASc,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,EAAE;IAElBd,cAAc,CAAC;MACbe,MAAM,EAAEd,YAAY,CAACS,OAAO,CAACC;IAC/B,CAAC,CAAC;EACJ;EAEA,oBACEjB,OAAA,CAACF,aAAa;IACZwB,KAAK,EAAC,uFAAiB;IACvBC,IAAI,EAAC,eAAe;IACpBC,UAAU,EAAC,wDAAW;IACtBpB,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEA,OAAQ;IACjBoB,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAEvB1B,OAAA;MACE2B,GAAG,EAAEpB,YAAa;MAClBqB,EAAE,EAAC,qBAAqB;MACxBC,IAAI,EAAC,KAAK;MACVC,SAAS,EAAC,wDAAwD;MAClEC,WAAW,EAAC,oGAAoB;MAChCR,IAAI,EAAC,MAAM;MACXS,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACFpC,OAAA;MAAM4B,EAAE,EAAC,2BAA2B;MAACE,SAAS,EAAC;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvD;AAEpB;AAACjC,EAAA,CAxCQF,eAAe;AAAAoC,EAAA,GAAfpC,eAAe;AA0CxB,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}