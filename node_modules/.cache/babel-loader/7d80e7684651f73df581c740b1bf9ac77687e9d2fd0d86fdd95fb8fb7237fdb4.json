{"ast":null,"code":"var _jsxFileName = \"/home/veronika/dev/react-mesto-auth/src/components/InfoTooltip.jsx\";\nimport React from 'react';\n\n// • <InfoTooltip /> - просто старый добрый попап, \n// который показывает сообщение об успешной регистрации, \n// или наоборот - о произошедшей при регистрации ошибке. \n// Управлять поведением этого попапа можно \n// через state’ы в компоненте App.js\n// Так же нужно доработать компонент <Header />. \n// Теперь в шапке в зависимости от страницы, на которой мы находимся, \n// будут так же отображаться разные \n// ссылки: “Регистрация“, “Войти“, “[email пользователя] Выйти“.\n//  Для отображения соответствующей ссылке на странице \n//  можно использовать <Route />\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoTooltip = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup popup_type_success popup_opened\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close\",\n        type: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__img-success \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popup__text\",\n        children: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup popup_type_success popup_opened\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close\",\n        type: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__img- \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popup__text\",\n        children: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = InfoTooltip;\nexport default InfoTooltip;\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","InfoTooltip","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/veronika/dev/react-mesto-auth/src/components/InfoTooltip.jsx"],"sourcesContent":["import React from 'react';\n\n\n// • <InfoTooltip /> - просто старый добрый попап, \n// который показывает сообщение об успешной регистрации, \n// или наоборот - о произошедшей при регистрации ошибке. \n// Управлять поведением этого попапа можно \n// через state’ы в компоненте App.js\n// Так же нужно доработать компонент <Header />. \n// Теперь в шапке в зависимости от страницы, на которой мы находимся, \n// будут так же отображаться разные \n// ссылки: “Регистрация“, “Войти“, “[email пользователя] Выйти“.\n//  Для отображения соответствующей ссылке на странице \n//  можно использовать <Route />\n\nconst InfoTooltip = () => {\n  return (\n    <div className='popup popup_type_success popup_opened'>\n      <div className=\"popup__container\">\n        <button className=\"popup__close\" type=\"button\" />\n        <div className='popup__img-success ' />\n        <p className='popup__text'>Вы успешно зарегистрировались!</p>\n      </div>\n    </div>\n  )\n  return (\n    <div className='popup popup_type_success popup_opened'>\n      <div className=\"popup__container\">\n        <button className=\"popup__close\" type=\"button\" />\n        <div className='popup__img- ' />\n        <p className='popup__text'>Вы успешно зарегистрировались!</p>\n      </div>\n    </div>\n  )\n}\n\nexport default InfoTooltip;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,oBACED,OAAA;IAAKE,SAAS,EAAC,uCAAuC;IAAAC,QAAA,eACpDH,OAAA;MAAKE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BH,OAAA;QAAQE,SAAS,EAAC,cAAc;QAACE,IAAI,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACjDR,OAAA;QAAKE,SAAS,EAAC;MAAqB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACvCR,OAAA;QAAGE,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAA8B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACzD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;EAER,oBACER,OAAA;IAAKE,SAAS,EAAC,uCAAuC;IAAAC,QAAA,eACpDH,OAAA;MAAKE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BH,OAAA;QAAQE,SAAS,EAAC,cAAc;QAACE,IAAI,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACjDR,OAAA;QAAKE,SAAS,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAChCR,OAAA;QAAGE,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAA8B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACzD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAAC,EAAA,GAnBKR,WAAW;AAqBjB,eAAeA,WAAW;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}