{"ast":null,"code":"var _jsxFileName = \"/home/veronika/dev/mesto-react/src/components/ImagePopup.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImagePopup(_ref) {\n  _s();\n  let {\n    onClose,\n    card,\n    isOpen\n  } = _ref;\n  React.useEffect(() => {\n    //ограничиваем навешивание обработчика: если не открыт, то не нужно навешивать\n    if (!isOpen) return;\n    // объявляем внутри useEffect функцию, чтобы она не теряла ссылку при перерисовке компонента\n    const closeByEsc = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    document.addEventListener('keydown', closeByEsc);\n    //обязательно удаляем обработчик\n    return () => document.removeEventListener('keydown', closeByEsc);\n    // обязательно следим за isOpen, чтобы срабатывало только при открытии, а не всегда\n  }, [isOpen, onClose]);\n\n  //создаем обработчик оверлея\n  const handleOverlay = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup popup_type_expand-card ${isOpen ? 'popup_opened' : ''}`,\n    onC: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close popup__close_expand_card\",\n        type: \"button\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: card.link,\n        alt: card.name,\n        className: \"popup__photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__photo-name\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n_s(ImagePopup, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ImagePopup;\nexport default ImagePopup;\nvar _c;\n$RefreshReg$(_c, \"ImagePopup\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ImagePopup","_ref","_s","onClose","card","isOpen","useEffect","closeByEsc","e","key","document","addEventListener","removeEventListener","handleOverlay","target","currentTarget","className","onC","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","link","alt","name","_c","$RefreshReg$"],"sources":["/home/veronika/dev/mesto-react/src/components/ImagePopup.jsx"],"sourcesContent":["import React from 'react';\n\nfunction ImagePopup({onClose, card, isOpen}) {\n\n  React.useEffect(() => {\n    //ограничиваем навешивание обработчика: если не открыт, то не нужно навешивать\n    if(!isOpen) return;\n    // объявляем внутри useEffect функцию, чтобы она не теряла ссылку при перерисовке компонента\n    const closeByEsc = (e) => {\n      if(e.key === 'Escape') {\n        onClose();\n      }\n    }\n    \n    document.addEventListener('keydown', closeByEsc)\n    //обязательно удаляем обработчик\n    return () => document.removeEventListener('keydown', closeByEsc)\n    // обязательно следим за isOpen, чтобы срабатывало только при открытии, а не всегда\n  }, [isOpen, onClose])\n\n  //создаем обработчик оверлея\n  const handleOverlay = (e) => {\n    if(e.target === e.currentTarget) {\n      onClose();\n    }\n  }\n\n  return (\n      <div className={`popup popup_type_expand-card ${isOpen ? 'popup_opened' : ''}`} onC>\n        <div className=\"popup__container-fullscreen\">\n          <button className=\"popup__close popup__close_expand_card\" type=\"button\" onClick={onClose}></button>\n          <img src={card.link} alt={card.name} className=\"popup__photo\" />\n          <h2 className=\"popup__photo-name\">{card.name}</h2>\n        </div>\n      </div>\n  )\n}\nexport default ImagePopup;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAACC,OAAO;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EAEzCJ,KAAK,CAACS,SAAS,CAAC,MAAM;IACpB;IACA,IAAG,CAACD,MAAM,EAAE;IACZ;IACA,MAAME,UAAU,GAAIC,CAAC,IAAK;MACxB,IAAGA,CAAC,CAACC,GAAG,KAAK,QAAQ,EAAE;QACrBN,OAAO,EAAE;MACX;IACF,CAAC;IAEDO,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,UAAU,CAAC;IAChD;IACA,OAAO,MAAMG,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEL,UAAU,CAAC;IAChE;EACF,CAAC,EAAE,CAACF,MAAM,EAAEF,OAAO,CAAC,CAAC;;EAErB;EACA,MAAMU,aAAa,GAAIL,CAAC,IAAK;IAC3B,IAAGA,CAAC,CAACM,MAAM,KAAKN,CAAC,CAACO,aAAa,EAAE;MAC/BZ,OAAO,EAAE;IACX;EACF,CAAC;EAED,oBACIJ,OAAA;IAAKiB,SAAS,EAAG,gCAA+BX,MAAM,GAAG,cAAc,GAAG,EAAG,EAAE;IAACY,GAAG;IAAAC,QAAA,eACjFnB,OAAA;MAAKiB,SAAS,EAAC,6BAA6B;MAAAE,QAAA,gBAC1CnB,OAAA;QAAQiB,SAAS,EAAC,uCAAuC;QAACG,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEjB;MAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU,eACnGzB,OAAA;QAAK0B,GAAG,EAAErB,IAAI,CAACsB,IAAK;QAACC,GAAG,EAAEvB,IAAI,CAACwB,IAAK;QAACZ,SAAS,EAAC;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAChEzB,OAAA;QAAIiB,SAAS,EAAC,mBAAmB;QAAAE,QAAA,EAAEd,IAAI,CAACwB;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC9C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEZ;AAACtB,EAAA,CAlCQF,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}