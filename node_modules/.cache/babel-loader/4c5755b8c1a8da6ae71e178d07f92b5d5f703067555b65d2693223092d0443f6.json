{"ast":null,"code":"var _jsxFileName = \"/home/veronika/dev/mesto-react/src/components/EditProfilePopup.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditProfilePopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = _ref;\n  // Подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n  const [values, setValues] = React.useState({});\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser], isOpen);\n  function handleChange(e) {\n    setName(e.target.value.name);\n    setDescription(e.target.value.description);\n  }\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name: name.name,\n      about: description.about\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"edit-profile\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input-name\",\n      type: \"text\",\n      className: \"popup__input-text popup__input-text_type_name\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n      name: \"name\"\n      // minlength=\"2\"\n      // maxlength=\"40\"\n      ,\n      value: name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"input-name-error\",\n      className: \"popup__error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input-interests\",\n      type: \"text\",\n      className: \"popup__input-text popup__input-text_type_interests\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043D\\u0442\\u0435\\u0440\\u0435\\u0441\\u044B\",\n      name: \"about\"\n      // minlength=\"2\"\n      // maxlength=\"200\"\n      ,\n      value: description,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"input-interests-error\",\n      className: \"popup__error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(EditProfilePopup, \"bHdC7QUiSXgVRrhvkrjCNAqi3A8=\");\n_c = EditProfilePopup;\nexport default EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["React","PopupWithForm","CurrentUserContext","jsxDEV","_jsxDEV","EditProfilePopup","_ref","_s","isOpen","onClose","onUpdateUser","currentUser","useContext","values","setValues","useState","useEffect","setName","name","setDescription","about","handleChange","e","target","value","description","handleSubmit","preventDefault","title","buttonText","onSubmit","children","id","type","className","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/veronika/dev/mesto-react/src/components/EditProfilePopup.jsx"],"sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser}) {\n\n  // Подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [values, setValues] = React.useState({});\n\n\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser], isOpen);\n  \n  function handleChange(e) {\n    setName(e.target.value.name);\n    setDescription(e.target.value.description);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name: name.name,\n      about: description.about,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      title='Редактировать профиль'\n      name='edit-profile'\n      buttonText='Сохранить'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        id=\"input-name\"\n        type=\"text\"\n        className=\"popup__input-text popup__input-text_type_name\"\n        placeholder=\"Введите имя\"\n        name=\"name\"\n        // minlength=\"2\"\n        // maxlength=\"40\"\n        value={name}\n        onChange={handleChange}\n        required\n      />\n      <span id=\"input-name-error\" className=\"popup__error\"></span>\n      <input\n        id=\"input-interests\"\n        type=\"text\"\n        className=\"popup__input-text popup__input-text_type_interests\"\n        placeholder=\"Введите интересы\"\n        name=\"about\"\n        // minlength=\"2\"\n        // maxlength=\"200\"\n        value={description}\n        onChange={handleChange}\n        required\n      />\n      <span id=\"input-interests-error\" className=\"popup__error\"></span>\n    </PopupWithForm>\n  )\n\n}\n\nexport default EditProfilePopup;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,kBAAkB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,SAASC,gBAAgBA,CAAAC,IAAA,EAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAAJ,IAAA;EAExD;EACA,MAAMK,WAAW,GAAGX,KAAK,CAACY,UAAU,CAACV,kBAAkB,CAAC;EAExD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAI9C;EACA;EACAf,KAAK,CAACgB,SAAS,CAAC,MAAM;IACpBC,OAAO,CAACN,WAAW,CAACO,IAAI,CAAC;IACzBC,cAAc,CAACR,WAAW,CAACS,KAAK,CAAC;EACnC,CAAC,EAAE,CAACT,WAAW,CAAC,EAAEH,MAAM,CAAC;EAEzB,SAASa,YAAYA,CAACC,CAAC,EAAE;IACvBL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAACN,IAAI,CAAC;IAC5BC,cAAc,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC;EAC5C;EAEA,SAASC,YAAYA,CAACJ,CAAC,EAAE;IACvB;IACAA,CAAC,CAACK,cAAc,EAAE;;IAElB;IACAjB,YAAY,CAAC;MACXQ,IAAI,EAAEA,IAAI,CAACA,IAAI;MACfE,KAAK,EAAEK,WAAW,CAACL;IACrB,CAAC,CAAC;EACJ;EAEA,oBACEhB,OAAA,CAACH,aAAa;IACZ2B,KAAK,EAAC,2HAAuB;IAC7BV,IAAI,EAAC,cAAc;IACnBW,UAAU,EAAC,wDAAW;IACtBrB,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEA,OAAQ;IACjBqB,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBAEvB3B,OAAA;MACE4B,EAAE,EAAC,YAAY;MACfC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAC,+CAA+C;MACzDC,WAAW,EAAC,+DAAa;MACzBjB,IAAI,EAAC;MACL;MACA;MAAA;MACAM,KAAK,EAAEN,IAAK;MACZkB,QAAQ,EAAEf,YAAa;MACvBgB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACFrC,OAAA;MAAM4B,EAAE,EAAC,kBAAkB;MAACE,SAAS,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAC5DrC,OAAA;MACE4B,EAAE,EAAC,iBAAiB;MACpBC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAC,oDAAoD;MAC9DC,WAAW,EAAC,6FAAkB;MAC9BjB,IAAI,EAAC;MACL;MACA;MAAA;MACAM,KAAK,EAAEC,WAAY;MACnBW,QAAQ,EAAEf,YAAa;MACvBgB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACFrC,OAAA;MAAM4B,EAAE,EAAC,uBAAuB;MAACE,SAAS,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnD;AAGpB;AAAClC,EAAA,CAtEQF,gBAAgB;AAAAqC,EAAA,GAAhBrC,gBAAgB;AAwEzB,eAAeA,gBAAgB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}