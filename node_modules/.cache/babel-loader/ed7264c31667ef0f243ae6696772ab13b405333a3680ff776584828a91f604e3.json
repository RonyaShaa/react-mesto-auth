{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._checkResponse = res => {\n      if (res.ok) {\n        //возвращаем ответ сервера\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    };\n    this._baseUrl = config.baseUrl;\n    this._headers = config.headers;\n  }\n  //загрузка информации о пользователе с сервера\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  //загрузка карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  //редактирование данных профиля\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkResponse);\n  }\n\n  //добавление новой карточки\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n\n  //удаление карточки\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  changeLikeCardStatus(cardId, likeStatus) {\n    if (!likeStatus) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers\n      }).then(this._checkResponse);\n    } else {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this._checkResponse);\n    }\n  }\n\n  //поставить лайк\n  putLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  //удалить лайк\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  //обновление аватара пользователя\n  editAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.link\n      })\n    }).then(this._checkResponse);\n  }\n}\n\n//экземпляр апи\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-62\",\n  headers: {\n    'content-type': 'application/json',\n    authorization: '42690f73-759c-4798-9db6-9b61cef90de2'\n  }\n});","map":{"version":3,"names":["Api","constructor","config","_checkResponse","res","ok","json","Promise","reject","status","_baseUrl","baseUrl","_headers","headers","getUserInfo","fetch","method","then","getInitialCards","editUserInfo","data","body","JSON","stringify","name","about","addNewCard","link","deleteCard","cardId","changeLikeCardStatus","likeStatus","putLike","deleteLike","editAvatar","avatar","api","authorization"],"sources":["/home/veronika/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(config){\n    this._baseUrl = config.baseUrl;\n    this._headers = config.headers;\n    \n  }\n\n  _checkResponse = (res) => {\n    if(res.ok) {\n      //возвращаем ответ сервера\n      return res.json(); \n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  };\n\n  //загрузка информации о пользователе с сервера\n   getUserInfo(){\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n   }\n\n  //загрузка карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n\n  //редактирование данных профиля\n  editUserInfo(data){\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body:  JSON.stringify({\n        name: data.name,\n        about: data.about\n      }),\n    })\n    .then(this._checkResponse);\n  }\n\n  //добавление новой карточки\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body:  JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n    .then(this._checkResponse);\n  }\n\n  //удаление карточки\n  deleteCard(cardId){\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n  \n  changeLikeCardStatus(cardId, likeStatus){\n    if(!likeStatus){\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers,\n      })\n      .then(this._checkResponse);\n    } else {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers,\n      })\n      .then(this._checkResponse);\n    }\n  }\n\n  //поставить лайк\n  putLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n  //удалить лайк\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n  //обновление аватара пользователя\n  editAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body:  JSON.stringify({\n        avatar: data.link,\n      })\n    })\n    .then(this._checkResponse);\n  }\n}\n\n//экземпляр апи\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-62\",\n  headers: {\n    'content-type': 'application/json',\n    authorization: '42690f73-759c-4798-9db6-9b61cef90de2',\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}